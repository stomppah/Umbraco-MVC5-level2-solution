@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Course.Level2
@using Umbraco.Web.Models
@{
    var numberOfItems = Model.GetParameterValue<int>("numberOfItems", 10);
    var statusUpdates = Model.Content.AncestorOrSelf("homePage").Descendants("statusUpdate").OrderByDescending(statusUpdate => statusUpdate.Id).Take(numberOfItems);
}
<h3>
    Recent status updates
</h3>
<div id="stream">
    @foreach (var statusUpdate in statusUpdates)
    {
        <div id="status@(statusUpdate.Id)">
            
            @if (statusUpdate.HasValue("memberId"))
            {
                var member = Umbraco.TypedMember(statusUpdate.GetPropertyValue<int>("memberId"));
                if (member.HasValue("avatar"))
                {
                    <p>
                        <img src="@(member.GetPropertyValue<string>("avatar"))?width=100" alt="@member.Name" />
                    </p>
                }
            }
            <p class="status-update">
                @Umbraco.StripHtml(statusUpdate.GetPropertyValue<string>("bodyText"))
            </p>
        
                <p>
                    <a data-status-id="@statusUpdate.Id"><i class="glyphicon glyphicon-thumbs-up"></i> like</a> <span class="likes">@(statusUpdate.GetPropertyValue<int>("likes"))</span> likes.
                </p>
                <p>
                    <strong>Published:</strong> <em>@statusUpdate.CreateDate</em>
                </p>
                <!-- Files go here -->
                <ul class="files thumbnails">
          @if (statusUpdate.HasProperty("relatedMedia") && statusUpdate.HasValue("relatedMedia"))
                {
					// get any related media id's as comma delimited list
                    var relatedMediaIds = statusUpdate.GetPropertyValue<string>("relatedMedia").Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries);
                    // probably use a property value converter to do this in real life...
                    IEnumerable<IPublishedContent> relatedMediaItems = Umbraco.TypedMedia(relatedMediaIds);

                    foreach (var item in relatedMediaItems)
                    {
                       <li>
                            <a href="@item.Url">
                                <img src="@item.Url" />
                            </a>
                        </li>
                    }

                }

                </ul>
                <div style="clear:both"></div>
        </div>
    }
</div>
<hr/>
<div class="alert alert-info">
    <em>Umbraco Macro Rendered at @DateTime.Now, Displaying @numberOfItems items</em> 
</div>